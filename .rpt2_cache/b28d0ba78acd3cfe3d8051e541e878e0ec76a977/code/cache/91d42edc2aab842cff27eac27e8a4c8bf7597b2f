{"code":"import * as _ from 'lodash';\r\nvar Card;\r\n(function (Card) {\r\n    // 万\r\n    Card[Card[\"CharacterOne\"] = 0] = \"CharacterOne\";\r\n    Card[Card[\"CharacterTwo\"] = 1] = \"CharacterTwo\";\r\n    Card[Card[\"CharacterThree\"] = 2] = \"CharacterThree\";\r\n    Card[Card[\"CharacterFour\"] = 3] = \"CharacterFour\";\r\n    Card[Card[\"CharacterFive\"] = 4] = \"CharacterFive\";\r\n    Card[Card[\"CharacterSix\"] = 5] = \"CharacterSix\";\r\n    Card[Card[\"CharacterSeven\"] = 6] = \"CharacterSeven\";\r\n    Card[Card[\"CharacterEight\"] = 7] = \"CharacterEight\";\r\n    Card[Card[\"CharacterNight\"] = 8] = \"CharacterNight\";\r\n    // 筒\r\n    Card[Card[\"DotOne\"] = 9] = \"DotOne\";\r\n    Card[Card[\"DotTwo\"] = 10] = \"DotTwo\";\r\n    Card[Card[\"DotThree\"] = 11] = \"DotThree\";\r\n    Card[Card[\"DotFour\"] = 12] = \"DotFour\";\r\n    Card[Card[\"DotFive\"] = 13] = \"DotFive\";\r\n    Card[Card[\"DotSix\"] = 14] = \"DotSix\";\r\n    Card[Card[\"DotSeven\"] = 15] = \"DotSeven\";\r\n    Card[Card[\"DotEight\"] = 16] = \"DotEight\";\r\n    Card[Card[\"DotNight\"] = 17] = \"DotNight\";\r\n    // 条\r\n    Card[Card[\"BambooOne\"] = 18] = \"BambooOne\";\r\n    Card[Card[\"BambooTwo\"] = 19] = \"BambooTwo\";\r\n    Card[Card[\"BambooThree\"] = 20] = \"BambooThree\";\r\n    Card[Card[\"BambooFour\"] = 21] = \"BambooFour\";\r\n    Card[Card[\"BambooFive\"] = 22] = \"BambooFive\";\r\n    Card[Card[\"BambooSix\"] = 23] = \"BambooSix\";\r\n    Card[Card[\"BambooSeven\"] = 24] = \"BambooSeven\";\r\n    Card[Card[\"BambooEight\"] = 25] = \"BambooEight\";\r\n    Card[Card[\"BambooNight\"] = 26] = \"BambooNight\";\r\n    // 风牌\r\n    Card[Card[\"East\"] = 27] = \"East\";\r\n    Card[Card[\"South\"] = 28] = \"South\";\r\n    Card[Card[\"West\"] = 29] = \"West\";\r\n    Card[Card[\"North\"] = 30] = \"North\";\r\n    // 箭牌\r\n    Card[Card[\"Green\"] = 31] = \"Green\";\r\n    Card[Card[\"Red\"] = 32] = \"Red\";\r\n    Card[Card[\"White\"] = 33] = \"White\";\r\n    // 花\r\n    Card[Card[\"Spring\"] = 34] = \"Spring\";\r\n    Card[Card[\"Summer\"] = 35] = \"Summer\";\r\n    Card[Card[\"Autumn\"] = 36] = \"Autumn\";\r\n    Card[Card[\"Winter\"] = 37] = \"Winter\";\r\n    Card[Card[\"Plum\"] = 38] = \"Plum\";\r\n    Card[Card[\"Orchid\"] = 39] = \"Orchid\";\r\n    Card[Card[\"Bamboo\"] = 40] = \"Bamboo\";\r\n    Card[Card[\"Chrysanthemum\"] = 41] = \"Chrysanthemum\";\r\n})(Card || (Card = {}));\r\n;\r\nvar NumberCard = [\r\n    Card.CharacterOne,\r\n    Card.CharacterTwo,\r\n    Card.CharacterThree,\r\n    Card.CharacterFour,\r\n    Card.CharacterFive,\r\n    Card.CharacterSix,\r\n    Card.CharacterSeven,\r\n    Card.CharacterEight,\r\n    Card.CharacterNight,\r\n    Card.DotOne,\r\n    Card.DotTwo,\r\n    Card.DotThree,\r\n    Card.DotFour,\r\n    Card.DotFive,\r\n    Card.DotSix,\r\n    Card.DotSeven,\r\n    Card.DotEight,\r\n    Card.DotNight,\r\n    Card.BambooOne,\r\n    Card.BambooTwo,\r\n    Card.BambooThree,\r\n    Card.BambooFour,\r\n    Card.BambooFive,\r\n    Card.BambooSix,\r\n    Card.BambooSeven,\r\n    Card.BambooEight,\r\n    Card.BambooNight\r\n];\r\nvar WindCard = [\r\n    Card.East,\r\n    Card.South,\r\n    Card.West,\r\n    Card.North\r\n];\r\nvar DragonCard = [\r\n    Card.Green,\r\n    Card.Red,\r\n    Card.White\r\n];\r\nvar FlowerCard = [\r\n    Card.Spring,\r\n    Card.Summer,\r\n    Card.Autumn,\r\n    Card.Winter,\r\n    Card.Plum,\r\n    Card.Orchid,\r\n    Card.Bamboo,\r\n    Card.Chrysanthemum\r\n];\r\n// 拼接\r\nfunction concatTiles(cards, tiles) {\r\n    for (var _i = 0, cards_1 = cards; _i < cards_1.length; _i++) {\r\n        var i = cards_1[_i];\r\n        tiles = tiles.concat([i, i, i, i]);\r\n    }\r\n    return tiles;\r\n}\r\n/**\r\n * 获取默认牌\r\n * @param hasWind 是否有风牌\r\n * @param hasDragon 是否有箭牌\r\n * @param hasFlower 是否有花\r\n */\r\nexport var getTiles = function (hasWind, hasDragon, hasFlower) {\r\n    if (hasWind === void 0) { hasWind = true; }\r\n    if (hasDragon === void 0) { hasDragon = true; }\r\n    if (hasFlower === void 0) { hasFlower = true; }\r\n    var tiles = [];\r\n    tiles = concatTiles(NumberCard, tiles);\r\n    if (hasWind) {\r\n        tiles = concatTiles(WindCard, tiles);\r\n    }\r\n    if (hasDragon) {\r\n        tiles = concatTiles(DragonCard, tiles);\r\n    }\r\n    if (hasFlower) {\r\n        for (var _i = 0, FlowerCard_1 = FlowerCard; _i < FlowerCard_1.length; _i++) {\r\n            var i = FlowerCard_1[_i];\r\n            tiles.push(i);\r\n        }\r\n    }\r\n    return tiles;\r\n};\r\n;\r\nexport var cardMaps = {\r\n    // 万\r\n    CharacterOne: '一万',\r\n    CharacterTwo: '二万',\r\n    CharacterThree: '三万',\r\n    CharacterFour: '四万',\r\n    CharacterFive: '五万',\r\n    CharacterSix: '六万',\r\n    CharacterSeven: '七万',\r\n    CharacterEight: '八万',\r\n    CharacterNight: '九万',\r\n    // 筒\r\n    DotOne: '一筒',\r\n    DotTwo: '二筒',\r\n    DotThree: '三筒',\r\n    DotFour: '四筒',\r\n    DotFive: '五筒',\r\n    DotSix: '六筒',\r\n    DotSeven: '七筒',\r\n    DotEight: '八筒',\r\n    DotNight: '九筒',\r\n    // 条\r\n    BambooOne: '一条',\r\n    BambooTwo: '二条',\r\n    BambooThree: '三条',\r\n    BambooFour: '四条',\r\n    BambooFive: '五条',\r\n    BambooSix: '六条',\r\n    BambooSeven: '七条',\r\n    BambooEight: '八条',\r\n    BambooNight: '九条',\r\n    // 风牌\r\n    East: '东风',\r\n    South: '南风',\r\n    West: '西风',\r\n    North: '北风',\r\n    // 箭牌\r\n    Green: '发财',\r\n    Red: '红中',\r\n    White: '白板',\r\n    // 花\r\n    Spring: '春',\r\n    Summer: '夏',\r\n    Autumn: '秋',\r\n    Winter: '冬',\r\n    Plum: '梅',\r\n    Orchid: '兰',\r\n    Bamboo: '菊',\r\n    Chrysanthemum: '竹'\r\n};\r\n// 洗牌：随机打乱顺序\r\nexport var shuffleTiles = function (tiles) {\r\n    return _.shuffle(tiles);\r\n};\r\n// 通过id获取麻将名\r\nexport var getTileSuit = function (tile) {\r\n    var maps = cardMaps;\r\n    return maps[Card[tile]];\r\n};\r\n// 排序\r\nexport var sortTiles = function (tiles) {\r\n    return tiles.slice().sort(function (a, b) {\r\n        return a - b;\r\n    });\r\n};\r\n// 批量导出麻将名\r\nexport var batchTilesSuit = function (tiles, s) {\r\n    if (s === void 0) { s = ','; }\r\n    var suits = tiles.map(getTileSuit);\r\n    return suits.join(s);\r\n};\r\n//# sourceMappingURL=tile.js.map","map":{"version":3,"file":"tile.js","sourceRoot":"","sources":["src/tile.ts"],"names":[],"mappings":"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"},"dts":{"name":"/Users/okbeng/git/mahjong/tile.d.ts","text":"/**\r\n * 获取默认牌\r\n * @param hasWind 是否有风牌\r\n * @param hasDragon 是否有箭牌\r\n * @param hasFlower 是否有花\r\n */\r\nexport declare let getTiles: (hasWind?: boolean, hasDragon?: boolean, hasFlower?: boolean) => number[];\r\nexport declare const cardMaps: {\r\n    CharacterOne: string;\r\n    CharacterTwo: string;\r\n    CharacterThree: string;\r\n    CharacterFour: string;\r\n    CharacterFive: string;\r\n    CharacterSix: string;\r\n    CharacterSeven: string;\r\n    CharacterEight: string;\r\n    CharacterNight: string;\r\n    DotOne: string;\r\n    DotTwo: string;\r\n    DotThree: string;\r\n    DotFour: string;\r\n    DotFive: string;\r\n    DotSix: string;\r\n    DotSeven: string;\r\n    DotEight: string;\r\n    DotNight: string;\r\n    BambooOne: string;\r\n    BambooTwo: string;\r\n    BambooThree: string;\r\n    BambooFour: string;\r\n    BambooFive: string;\r\n    BambooSix: string;\r\n    BambooSeven: string;\r\n    BambooEight: string;\r\n    BambooNight: string;\r\n    East: string;\r\n    South: string;\r\n    West: string;\r\n    North: string;\r\n    Green: string;\r\n    Red: string;\r\n    White: string;\r\n    Spring: string;\r\n    Summer: string;\r\n    Autumn: string;\r\n    Winter: string;\r\n    Plum: string;\r\n    Orchid: string;\r\n    Bamboo: string;\r\n    Chrysanthemum: string;\r\n};\r\nexport declare let shuffleTiles: (tiles: number[]) => number[];\r\nexport declare let getTileSuit: (tile: number) => string;\r\nexport declare let sortTiles: (tiles: number[]) => number[];\r\nexport declare let batchTilesSuit: (tiles: number[], s?: string) => string;\r\n"}}
